[{"/Users/i2max/Documents/Github_desktop/my-app/src/index.js":"1","/Users/i2max/Documents/Github_desktop/my-app/src/App.js":"2","/Users/i2max/Documents/Github_desktop/my-app/src/reportWebVitals.js":"3","/Users/i2max/Documents/Github_desktop/my-app/src/pages/First_Page.js":"4","/Users/i2max/Documents/Github_desktop/my-app/src/component/insert.js":"5","/Users/i2max/Documents/Github_desktop/my-app/src/component/Body.js":"6","/Users/i2max/Documents/Github_desktop/my-app/src/component/IngredientCard.js":"7","/Users/i2max/Documents/Github_desktop/my-app/src/component/BoardList.js":"8","/Users/i2max/Documents/Github_desktop/my-app/src/component/Board.js":"9","/Users/i2max/Documents/Github_desktop/my-app/src/component/Insert.js":"10","/Users/i2max/Documents/Github_desktop/my-app/src/component/BoradNum.js":"11","/Users/i2max/Documents/Github_desktop/crud_board/src/index.js":"12","/Users/i2max/Documents/Github_desktop/crud_board/src/App.js":"13","/Users/i2max/Documents/Github_desktop/crud_board/src/reportWebVitals.js":"14","/Users/i2max/Documents/Github_desktop/crud_board/src/pages/First_Page.js":"15","/Users/i2max/Documents/Github_desktop/crud_board/src/component/Insert.js":"16","/Users/i2max/Documents/Github_desktop/crud_board/src/component/BoardList.js":"17","/Users/i2max/Documents/Github_desktop/crud_board/src/component/Board.js":"18","/Users/i2max/Documents/Github_desktop/crud_board/src/component/BoradNum.js":"19"},{"size":535,"mtime":1652835574215,"results":"20","hashOfConfig":"21"},{"size":228,"mtime":1652863414958,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1652835574215,"results":"23","hashOfConfig":"21"},{"size":346,"mtime":1652921628449,"results":"24","hashOfConfig":"21"},{"size":1350,"mtime":1652855168751,"results":"25","hashOfConfig":"21"},{"size":814,"mtime":1652836131785,"results":"26","hashOfConfig":"21"},{"size":595,"mtime":1652836131786,"results":"27","hashOfConfig":"21"},{"size":2740,"mtime":1652921750693,"results":"28","hashOfConfig":"21"},{"size":434,"mtime":1652858522574,"results":"29","hashOfConfig":"21"},{"size":1350,"mtime":1652855168751,"results":"30","hashOfConfig":"21"},{"size":130,"mtime":1652856832548,"results":"31","hashOfConfig":"21"},{"size":535,"mtime":1652835574215,"results":"32","hashOfConfig":"33"},{"size":228,"mtime":1652863414958,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1652835574215,"results":"35","hashOfConfig":"33"},{"size":346,"mtime":1652921628449,"results":"36","hashOfConfig":"33"},{"size":1350,"mtime":1652855168751,"results":"37","hashOfConfig":"33"},{"size":2740,"mtime":1652921750693,"results":"38","hashOfConfig":"33"},{"size":434,"mtime":1652858522574,"results":"39","hashOfConfig":"33"},{"size":130,"mtime":1652856832548,"results":"40","hashOfConfig":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"109vsff",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"kc139l",{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/i2max/Documents/Github_desktop/my-app/src/index.js",[],[],[],"/Users/i2max/Documents/Github_desktop/my-app/src/App.js",["104","105"],[],"// import logo from './logo.svg';\nimport './App.css';\nimport Insert from './component/Insert';\nimport First_Page from './pages/First_Page';\n\nfunction App() {\n  return (\n   <>\n   <First_Page />\n   </>\n  );\n}\n\nexport default App;\n","/Users/i2max/Documents/Github_desktop/my-app/src/reportWebVitals.js",[],[],"/Users/i2max/Documents/Github_desktop/my-app/src/pages/First_Page.js",[],[],"/Users/i2max/Documents/Github_desktop/my-app/src/component/insert.js",["106"],[],"import { useEffect, useState, useRef, useCallback } from \"react\";\n\nfunction Insert(){\n    const [testList, setTestList] = useState([]);\n    const inputRef = useRef();\n\n    const submitName = useCallback(\n        async (e) => {\n\n            const input = inputRef.current;\n            const value = input?.value;\n\n            if (value) {\n                const body = JSON.stringify({ test1 : value });\n                const response = await fetch(\"/cocktail/api/post/i_test\", {\n                    method : \"POST\",\n                    headers : {\n                        \"Content-Type\" : \"application/json\",\n                    },\n                    body : body,\n                });\n\n                if (response.ok) {\n                    setTestList([...testList, value]);\n                }\n            }\n\n        },\n        [testList]\n    )\n\n    return (\n        <>\n            <input ref={inputRef} placeholder=\"이름\"/>\n            <button type=\"button\" onClick={(e) => submitName(e)}>\n                제출하기\n            </button>\n\n            {testList.map((name) => (\n                <div>\n                    {name}\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default Insert",[],"/Users/i2max/Documents/Github_desktop/my-app/src/component/Body.js",[],[],"/Users/i2max/Documents/Github_desktop/my-app/src/component/IngredientCard.js",[],[],"/Users/i2max/Documents/Github_desktop/my-app/src/component/BoardList.js",["107","108"],[],"import { useEffect, useState, useCallback } from \"react\";\nimport Board from \"./Board\";\nimport BoardNum from \"./BoradNum\"\nimport '../App.css';\n\nfunction BoardList() {\n    // 게시물 리스트\n    const [boardList, setboardList] = useState([]);\n\n    useEffect( () => {\n        async function fetchItems() {\n            const response = await fetch(\n                \"/test/api/test/s_tnb_list_num?num=1\"\n            );\n            \n            const result = await response.json();\n\n            setboardList(result);\n        }\n\n        fetchItems();\n        \n    }, []);\n\n    // 게시판 페이지 넘버링\n    const [boardNumList, setboardNumList] = useState([]);\n\n    useEffect( () => {\n        async function fetchItems() {\n            const response = await fetch(\n                \"/test/api/test/s_tnb_num\"\n            );\n            \n            const result = await response.json();\n\n            setboardNumList(result);\n        }\n\n        fetchItems();\n        \n    }, []);\n\n    // 버튼 이벤트\n    const boardItem = useCallback(\n        async (e) => {\n            const input = this.state.inputValue;\n            const value = input?.value;\n\n            if (value) {\n                const body = JSON.stringify( {lnum : value} );\n                const response = await fetch(\"/test/api/test/s_tnb_list_num?num=\" + value,\n                {\n                    method : \"POST\",\n                    headers : {\n                        \"Content-Type\" : \"application/json\",\n                    },\n                    body : body,\n                });\n            }\n        }\n    )\n    // 작업중...\n\n    // 실제 출력 화면\n    if (boardList.length > 0) {\n        return(\n            <>\n            <table class=\"border_black\">\n                <thead>\n                    <tr>\n                        <th style={{border: \"1px solid #444444\"}}>RNUM</th>\n                        <th style={{border: \"1px solid #444444\"}}>ID</th>\n                        <th style={{border: \"1px solid #444444\"}}>NAME</th>\n                        <th style={{border: \"1px solid #444444\",width:\"200px\"}}>CONTENT</th>\n                    </tr>\n                </thead>\n                <tbody>\n            {\n                boardList.map((board) => (\n                    <Board items = {board}/>\n                ))\n            }\n                </tbody>\n            </table>\n            <table>\n            {\n                boardNumList.map((boardNum) => (\n                    <button id={boardNum.LNUM} type=\"button\" onClick={(e) => boardItem(e)}>\n                    <BoardNum items = {boardNum}/>\n                    </button>\n                ))\n            }\n            </table>\n\n\n            </>\n        );\n    }\n\n}\n\nexport default BoardList;","/Users/i2max/Documents/Github_desktop/my-app/src/component/Board.js",[],[],"/Users/i2max/Documents/Github_desktop/my-app/src/component/Insert.js",[],[],"/Users/i2max/Documents/Github_desktop/my-app/src/component/BoradNum.js",[],[],"/Users/i2max/Documents/Github_desktop/crud_board/src/index.js",[],[],[],"/Users/i2max/Documents/Github_desktop/crud_board/src/App.js",["109","110"],[],"/Users/i2max/Documents/Github_desktop/crud_board/src/reportWebVitals.js",[],[],"/Users/i2max/Documents/Github_desktop/crud_board/src/pages/First_Page.js",[],[],"/Users/i2max/Documents/Github_desktop/crud_board/src/component/Insert.js",[],[],"/Users/i2max/Documents/Github_desktop/crud_board/src/component/BoardList.js",["111","112"],[],"/Users/i2max/Documents/Github_desktop/crud_board/src/component/Board.js",[],[],"/Users/i2max/Documents/Github_desktop/crud_board/src/component/BoradNum.js",[],[],{"ruleId":"113","severity":1,"message":"114","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":9,"column":4,"nodeType":"119","messageId":"120","endLine":9,"endColumn":18},{"ruleId":"113","severity":1,"message":"121","line":1,"column":10,"nodeType":"115","messageId":"116","endLine":1,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":44,"column":23,"nodeType":"115","endLine":44,"endColumn":34},{"ruleId":"113","severity":1,"message":"124","line":51,"column":23,"nodeType":"115","messageId":"116","endLine":51,"endColumn":31},{"ruleId":"113","severity":1,"message":"114","line":3,"column":8,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":9,"column":4,"nodeType":"119","messageId":"120","endLine":9,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":44,"column":23,"nodeType":"115","endLine":44,"endColumn":34},{"ruleId":"113","severity":1,"message":"124","line":51,"column":23,"nodeType":"115","messageId":"116","endLine":51,"endColumn":31},"no-unused-vars","'Insert' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component First_Page must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","'response' is assigned a value but never used."]