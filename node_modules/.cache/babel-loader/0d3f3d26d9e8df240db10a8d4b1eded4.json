{"ast":null,"code":"var _jsxFileName = \"/Users/i2max/Documents/Github_desktop/my-app/src/component/insert.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Insert() {\n  _s();\n\n  const [testList, setTestList] = useState([]);\n  const inputRef = useRef();\n  const submitName = useCallback(async e => {\n    const input = inputRef.current;\n    const value = input === null || input === void 0 ? void 0 : input.value;\n\n    if (value) {\n      const body = JSON.stringify({\n        test1: value\n      });\n      const response = await fetch(\"/cocktail/api/post/i_test\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: body\n      });\n\n      if (response.ok) {\n        setTestList([...testList, value]);\n      }\n    }\n  }, [testList]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      placeholder: \"\\uC774\\uB984\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: e => submitName(e),\n      children: \"\\uC81C\\uCD9C\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), testList.map(name => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true);\n}\n\n_s(Insert, \"c0pVhBOxODPEDwUWP8znBf0EbJY=\");\n\n_c = Insert;\n;\nexport default Insert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Insert\");","map":{"version":3,"names":["useEffect","useState","useRef","useCallback","Insert","testList","setTestList","inputRef","submitName","e","input","current","value","body","JSON","stringify","test1","response","fetch","method","headers","ok","map","name"],"sources":["/Users/i2max/Documents/Github_desktop/my-app/src/component/insert.js"],"sourcesContent":["import { useEffect, useState, useRef, useCallback } from \"react\";\n\nfunction Insert(){\n    const [testList, setTestList] = useState([]);\n    const inputRef = useRef();\n\n    const submitName = useCallback(\n        async (e) => {\n\n            const input = inputRef.current;\n            const value = input?.value;\n\n            if (value) {\n                const body = JSON.stringify({ test1 : value });\n                const response = await fetch(\"/cocktail/api/post/i_test\", {\n                    method : \"POST\",\n                    headers : {\n                        \"Content-Type\" : \"application/json\",\n                    },\n                    body : body,\n                });\n\n                if (response.ok) {\n                    setTestList([...testList, value]);\n                }\n            }\n\n        },\n        [testList]\n    )\n\n    return (\n        <>\n            <input ref={inputRef} placeholder=\"이름\"/>\n            <button type=\"button\" onClick={(e) => submitName(e)}>\n                제출하기\n            </button>\n\n            {testList.map((name) => (\n                <div>\n                    {name}\n                </div>\n            ))}\n        </>\n    );\n};\n\nexport default Insert"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,EAAsCC,WAAtC,QAAyD,OAAzD;;;;AAEA,SAASC,MAAT,GAAiB;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMM,QAAQ,GAAGL,MAAM,EAAvB;EAEA,MAAMM,UAAU,GAAGL,WAAW,CAC1B,MAAOM,CAAP,IAAa;IAET,MAAMC,KAAK,GAAGH,QAAQ,CAACI,OAAvB;IACA,MAAMC,KAAK,GAAGF,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEE,KAArB;;IAEA,IAAIA,KAAJ,EAAW;MACP,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;QAAEC,KAAK,EAAGJ;MAAV,CAAf,CAAb;MACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAAD,EAA8B;QACtDC,MAAM,EAAG,MAD6C;QAEtDC,OAAO,EAAG;UACN,gBAAiB;QADX,CAF4C;QAKtDP,IAAI,EAAGA;MAL+C,CAA9B,CAA5B;;MAQA,IAAII,QAAQ,CAACI,EAAb,EAAiB;QACbf,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcO,KAAd,CAAD,CAAX;MACH;IACJ;EAEJ,CArByB,EAsB1B,CAACP,QAAD,CAtB0B,CAA9B;EAyBA,oBACI;IAAA,wBACI;MAAO,GAAG,EAAEE,QAAZ;MAAsB,WAAW,EAAC;IAAlC;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAGE,CAAD,IAAOD,UAAU,CAACC,CAAD,CAAhD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAMKJ,QAAQ,CAACiB,GAAT,CAAcC,IAAD,iBACV;MAAA,UACKA;IADL;MAAA;MAAA;MAAA;IAAA,QADH,CANL;EAAA,gBADJ;AAcH;;GA3CQnB,M;;KAAAA,M;AA2CR;AAED,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}