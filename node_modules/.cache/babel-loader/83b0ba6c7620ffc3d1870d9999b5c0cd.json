{"ast":null,"code":"var _jsxFileName = \"/Users/i2max/Documents/Github_desktop/my-app/src/component/Body.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport IngredientCard from \"./IngredientCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Body() {\n  _s();\n\n  const [ingredientlist, setingredientList] = useState([]);\n  useEffect(() => {\n    async function fetchItems() {\n      const response = await fetch(\"/cocktail/api/select/select_material_list_all?cate_1=*&cate_2=*&rnum=1&order=k1&cnt=*\");\n      const result = await response.json();\n      setingredientList(result);\n    }\n\n    fetchItems();\n  }, []);\n\n  if (ingredientlist.length > 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: ingredientlist.map(ingredient => /*#__PURE__*/_jsxDEV(IngredientCard, {\n        items: ingredient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this))\n    }, void 0, false);\n  }\n}\n\n_s(Body, \"gV6NRkDuagKykJVwCRVghFqvrO4=\");\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"names":["useEffect","useState","IngredientCard","Body","ingredientlist","setingredientList","fetchItems","response","fetch","result","json","length","map","ingredient"],"sources":["/Users/i2max/Documents/Github_desktop/my-app/src/component/Body.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport IngredientCard from \"./IngredientCard\";\n\nfunction Body() {\n    const [ingredientlist, setingredientList] = useState([]);\n\n    useEffect( () => {\n    async function fetchItems() {\n        const response = await fetch(\n            \"/cocktail/api/select/select_material_list_all?cate_1=*&cate_2=*&rnum=1&order=k1&cnt=*\"\n        );\n\n            const result = await response.json();\n\n            setingredientList(result);\n    }\n    \n    fetchItems();\n}, []);\n\n    if (ingredientlist.length > 0) {\n        return (\n            <>\n                {\n                    ingredientlist.map((ingredient) => (\n                        <IngredientCard items = {ingredient}/>\n                    ))\n                }\n            </>\n        );\n    }\n\n}\n\nexport default Body;"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EACZ,MAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,EAAD,CAApD;EAEAD,SAAS,CAAE,MAAM;IACjB,eAAeM,UAAf,GAA4B;MACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACxB,uFADwB,CAA5B;MAII,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;MAEAL,iBAAiB,CAACI,MAAD,CAAjB;IACP;;IAEDH,UAAU;EACb,CAZY,EAYV,EAZU,CAAT;;EAcA,IAAIF,cAAc,CAACO,MAAf,GAAwB,CAA5B,EAA+B;IAC3B,oBACI;MAAA,UAEQP,cAAc,CAACQ,GAAf,CAAoBC,UAAD,iBACf,QAAC,cAAD;QAAgB,KAAK,EAAIA;MAAzB;QAAA;QAAA;QAAA;MAAA,QADJ;IAFR,iBADJ;EASH;AAEJ;;GA7BQV,I;;KAAAA,I;AA+BT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}